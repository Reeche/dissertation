Example values:
optimization_criterion = likelihood
evaluations = 400
num_simulations = 1
num_trials = 30


perform 400 evaluations of likelihood function with different parameters (mcrl_modelling/optimizer.py; optimize_hyper_opt_params())
for each evaluation i:

    sample vector of hyperparameters \theta_i from prior distributions (mcrl_modelling/param_search_space.json)

    run 1 simulation of the entire environment with selected model (mcrl_modelling/optimizer.py; objective_fn())
    for each num_simulation j:

        starting with prior distribution on feature weights (w_i_j_0)

        simulate the model on all 30 trials using participant actions
        for each num_trial k:
            take actions participant took until termination

            store likelihood of each participant action given w_i_j_k

            obtain terminal reward (object-level)

            update posterior of feature weights using terminal reward to obtain w_i_j_(k+1)

    store likelihood of participant click sequence under \theta_i

return set of parameters \theta_i that yielded maximum likelihood